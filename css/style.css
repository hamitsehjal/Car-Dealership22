@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600&display=swap');

/* 
 1. The :root CSS pseudo-class matches the root element of a tree representing the document. 
 2. In HTML, :root represents the <html> element and is identical to the selector html, except that its specificity is higher. 
*/
:root {

    /* 
     Custom css variable: They are set using custom property notation (e.g., --main-color: black;) and are accessed using the 
     var() function (e.g., color: var(--main-color);). 
    */
    --yellow: #f9d806;
    --light-yellow: #ffee80;
    --black: #130f40;
    --light-color: #666;
    --box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .1);
    --border: .1rem solid rgba(0, 0, 0, .1);
}


* {
    font-family: 'Poppins', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    border: none;
    text-transform: capitalize;
    text-decoration: none;

    transition: all .2s linear;
    /* 1. linear: specifies a transition effect with the same speed from start to end 
       2. all: means apply this on all css properties
       3. .2s: duration of transition
    */
}

html {
    font-size: 62.5%;
    overflow-x: hidden;
    /* difference between rem and em: -
        1. em is a CSS unit relative to the font size of the parent element, while rem is a CSS unit relative to the 
           font size of an html element. 
        2. Both of these are scalable units, meaning they give us the ability to scale elements up and down, relative to a set value.
       ; */
    scroll-padding: 7rem;
    scroll-behavior: smooth;
}

.btn {
    display: inline-block;
    margin-top: 1rem;
    border-radius: .5rem;
    background: var(--light-yellow);
    color: var(--black);
    font-weight: 500;
    font-size: 1.7rem;
    padding: 1rem 2rem;
    cursor: pointer;
}

.btn:hover {
    background: var(--yellow);
}

.header {
    position: fixed;
    /* 1. The top property affects the vertical position of a positioned element. This property has no effect on non-positioned elements.
       2. If position: absolute; or position: fixed; - the top property sets the top edge of an element to a unit above/below the top 
       edge of its nearest positioned ancestor. 
    */
    top: 0;
    /* 
        1. The left or right property affects the horizontal position of a positioned element.
        2. If position: absolute; or position: fixed; - the left property sets the left edge of an element to a unit to the left of the left edge of its nearest positioned ancestor.
         */
    left: 0;
    right: 0;
    /* 
    - z-index is the CSS property that controls the stacking order of overlapping elements on a page. 
    - An element with a higher z-index value will appear in front of an element with a lower z-index value.
    */
    z-index: 999;
    /* 
    - justify-content — controls alignment of all items on the main axis. 
    - align-items — controls alignment of all items on the cross axis 
    */
    display: flex;
    background: #fff;
    justify-content: space-between;
    align-items: center;
    padding: 3rem 9%;
}

.header .logo {
    font-size: 2.5rem;
    color: var(--black);
    font-weight: bolder;
}

.header .logo span {
    color: var(--yellow);
}

.header .navbar a {
    color: var(--black);
    font-size: 1.7rem;
    margin: 0 1rem;
}

.header .navbar a:hover {
    color: var(--yellow);
}

.header .btn {
    margin-top: 0;
}

.header #login-btn i {
    display: none;
    font-size: 2.5rem;
    color: var(--light-color);
    margin: 1px;
    cursor: pointer;
}

#menu-btn {
    font-size: 2.5rem;
    color: var(--light-color);
    cursor: pointer;
    display: none;
}

/* body {
    height: 300rem;
} */

.header.active {
    box-shadow: var(--box-shadow);
    padding: 2rem 9%;
}

/* @Media Queries */
/* 
    - Media queries allow you to apply CSS styles depending on a device's general type (such as print vs. screen) or other
    - characteristics such as screen resolution or browser viewport width

*/

@media(max-width:991px) {
    html {
        font-size: 55%;

    }

    .header {
        padding: 2rem;
    }

    .header.active {
        padding: 2rem ;
    }

}

@media(max-width:768px) {
    .header #login-btn i {
        display: block;
    }

    .header #login-btn .btn {
        display: none;
    }

    .header .navbar {
        /* An element with position: absolute; is positioned relative to the nearest positioned ancestor */
        position: absolute;
        top: 99%;
        left: 0;
        right: 0;
        background-color: #fff;
        border-top: var(--border);
        clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
    }

    .header .navbar.active {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
    }

    .header .navbar a {
        display: block;
        font-size: 2rem;
        margin: 2rem;
    }

    #menu-btn {
        display: block;
    }

    #menu-btn.fa-times {
        color: #130f40;
        transform: rotate(180deg);
    }

}

@media(max-width:450px) {
    html {
        font-size: 50%;
    }
}